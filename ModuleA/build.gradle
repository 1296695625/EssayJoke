def isModule = rootProject.ext.isModule.toBoolean()

if (isModule) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.common.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.common.minSdkVersion
        targetSdkVersion rootProject.ext.common.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }

    sourceSets {
        main {
            if (isModule) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
                java.srcDirs = ['src/main/module/java']
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //全部Module一起编译的时候剔除debug目录
                    exclude '**/module/**'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation com_android_support_appcompat_v7
    implementation com_android_support_constraint_constraint_layout
    testImplementation junit
    androidTestImplementation com_android_support_test_runner
    androidTestImplementation com_android_support_test_espresso_espresso_core

    //ARouter
    annotationProcessor com_alibaba_arouter_compiler

    api project(':Router')
}
